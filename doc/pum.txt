*pum.txt*	Original popup completion menu framework library

Version: 0.0
Author: Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS						*pum-contents*

Introduction		|pum-introduction|
Install			|pum-install|
Interface		|pum-interface|
  Variables		  |pum-variables|
  Options		  |pum-options|
  Functions		  |pum-functions|
  Key mappings		  |pum-key-mappings|
  Autocmds		  |pum-autocmds|
Examples		|pum-examples|
FAQ			|pum-faq|
Compatibility		|pum-compatibility|


==============================================================================
INTRODUCTION						*pum-introduction*

*pum* is the framework library to implement original popup menu completion.

It works both insert mode and command line mode.


==============================================================================
INSTALL							*pum-install*

Note: pum.vim requires Neovim (0.6.0+) or Vim8.2.1978+ (latest is
recommended).


==============================================================================
INTERFACE						*pum-interface*

------------------------------------------------------------------------------
VARIABLES	 					*pum-variables*

						*g:pum#completed_item*
g:pum#completed_item
		It is inserted item like |v:completed_item|.
		It is used in |PumCompleteDone| event.

						*g:pum#skip_next_complete*
g:pum#skip_next_complete
		If it is set, auto completion plugin must be skipped auto
		completion.
		The plugin must reset the variable after the completion is
		skipped.

		Default: v:false

------------------------------------------------------------------------------
OPTIONS	 						*pum-options*

Options can be toggled through the use of |pum#set_option()|.

					*pum-options-border*
border
		The completion window border.  You can specify border
		|nvim_open_win()| border option.
		Note: It is neovim only.

		Default: "none"

					*pum-options-highlight_selected*
highlight_selected
		The selected highlight of candidates.

		Default: "PmenulSel"

					*pum-options-winblend*
winblend
		The 'winblend' config for popup menu.
		Note: It is neovim only.

		Default: same with 'winblend'

------------------------------------------------------------------------------
FUNCTIONS 						*pum-functions*

							*pum#close()*
pum#close()
		Close current popup menu.

							*pum#complete_info()*
pum#complete_info()
		Returns |Dictionary| like |complete_info()|.

							*pum#open()*
pum#open({startcol}, {items})
		Open popup menu like |complete()|.
		{startcol} is the byte offset in the line where the completed
		text start.
		{items} must be a |List|.  See |complete-items| for the kind
		of items.
		Note: If 'completeopt' contains "noinsert", the first item is
		selected automatically, but it increases screen flicker.

							*pum#set_option()*
pum#set_option({option-name}, {value})
pum#set_option({dict})
		Set {option-name} option to {value}.
		If {dict} is available, the key is {option-name} and the value
		is {value}. See |pum-options| for available {option-name}.

							*pum#visible()*
pum#visible()
		Returns |v:true| if the popup menu is visible like
		|pumvisible()|.


------------------------------------------------------------------------------
KEY MAPPINGS 						*pum-key-mappings*

							*pum#map#cancel()*
pum#map#cancel()
		Cancel the select and close the popup.
		Note: It must not be called in |:map-<expr>|.
							*pum#map#confirm()*
pum#map#confirm()
		Insert the select and close the popup.
		Note: It must not be called in |:map-<expr>|.

						*pum#map#insert_relative()*
pum#map#insert_relative({number})
		Move forward or backward {number} and insert the candidate.
		Note: It must not be called in |:map-<expr>|.

						*pum#map#select_relative()*
pum#map#select_relative()
		Move forward or backward {number} and select the candidate.
		Note: It must not be called in |:map-<expr>|.


------------------------------------------------------------------------------
AUTOCMDS	 					*pum-autocmds*

							*PumCompleteDone*
PumCompleteDone
		It is called after completion is done like |CompleteDone|.
		|g:pum#completed_item| gives the completed item.


==============================================================================
EXAMPLES						*pum-examples*
>
	inoremap <Tab>   <Cmd>call pum#map#insert_relative(+1)<CR>
	inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
	inoremap <C-n>   <Cmd>call pum#map#insert_relative(+1)<CR>
	inoremap <C-p>   <Cmd>call pum#map#insert_relative(-1)<CR>
	inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
	inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
<

==============================================================================
FREQUENTLY ASKED QUESTIONS (FAQ)			*pum-faq*

Q: How to donate money to you?

A: I have started github sponsorship to spend more time for Vim/neovim
plugins.  You can donate money to help me!

   https://github.com/sponsors/Shougo


==============================================================================
COMPATIBILITY						*pum-compatibility*


==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
